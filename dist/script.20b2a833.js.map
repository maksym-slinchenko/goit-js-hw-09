{"version":3,"sources":["gallery-items.js","script.js"],"names":["preview","original","description","creatImgItem","array","map","join","galleryEl","document","querySelector","imagesList","images","insertAdjacentHTML","arePicturesSame","image","lightboxImgEl","getAttribute","scrollImage","event","code","index","findIndex","setAttribute","length","body","addEventListener","lightboxEl","displayModal","preventDefault","target","classList","contains","add","dataset","source","closeLightbox","remove","closeLightboxByKey","console","log","Hello"],"mappings":"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","file":"script.20b2a833.js","sourceRoot":"..","sourcesContent":["export default [\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\r\n    description: 'Hokkaido Flower',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\r\n    description: 'Container Haulage Freight',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\r\n    description: 'Aerial Beach View',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\r\n    description: 'Flower Blooms',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\r\n    description: 'Alpine Mountains',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\r\n    description: 'Mountain Lake Sailing',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\r\n    description: 'Alpine Spring Meadows',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\r\n    description: 'Nature Landscape',\r\n  },\r\n  {\r\n    preview:\r\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\r\n    description: 'Lighthouse Coast Sea',\r\n  },\r\n];\r\n","// Задача:\r\n//Создание и рендер разметки по массиву данных и предоставленному шаблону.\r\nimport images from './gallery-items.js';\r\n\r\nconst creatImgItem = array => {\r\n  return array\r\n    .map(({ preview, original, description }) => {\r\n      return `<li class=\"gallery__item\">\r\n        <a\r\n          class=\"gallery__link\"\r\n          href=\"${original}\">\r\n          <img\r\n            class=\"gallery__image\"\r\n            src=\"${preview}\"\r\n            data-source=\"${original}\"\r\n            alt=\"${description}\"\r\n          />\r\n        </a>\r\n      </li>`;\r\n    })\r\n    .join('');\r\n};\r\n\r\nconst galleryEl = document.querySelector('.js-gallery');\r\nconst imagesList = creatImgItem(images);\r\n\r\ngalleryEl.insertAdjacentHTML('beforeend', imagesList);\r\n\r\n// Задача:\r\n// Реализация делегирования на галерее ul.js-gallery и\r\n// получение url большого изображения.\r\n// Открытие модального окна по клику на элементе галереи.\r\n// Подмена значения атрибута src элемента img.lightbox__image.\r\n\r\n// Функция сравнения картинки для определения индекса\r\nconst arePicturesSame = image => {\r\n  return image.original === lightboxImgEl.getAttribute('src');\r\n};\r\n\r\n// функция перелистывания вправо\r\nconst scrollImage = event => {\r\n  if (event.code !== 'ArrowRight' && event.code !== 'ArrowLeft') {\r\n    return;\r\n  }\r\n\r\n  let index = images.findIndex(arePicturesSame);\r\n\r\n  if (event.code === 'ArrowRight') {\r\n    index += 1;\r\n  } else {\r\n    index -= 1;\r\n  }\r\n  if (index < 0) {\r\n    lightboxImgEl.setAttribute('src', images[images.length - 1].original);\r\n    lightboxImgEl.setAttribute('alt', images[images.length - 1].description);\r\n    return;\r\n  }\r\n\r\n  if (index < images.length) {\r\n    lightboxImgEl.setAttribute('src', images[index].original);\r\n    lightboxImgEl.setAttribute('alt', images[index].description);\r\n  } else {\r\n    lightboxImgEl.setAttribute('src', images[0].original);\r\n    lightboxImgEl.setAttribute('alt', images[0].description);\r\n  }\r\n};\r\n\r\ndocument.body.addEventListener('keydown', scrollImage);\r\ndocument.body.addEventListener('keydown', scrollImage);\r\n\r\n// вызов модального окна и подстановка картинки\r\nconst lightboxEl = document.querySelector('.js-lightbox');\r\nconst lightboxImgEl = lightboxEl.querySelector('.lightbox__image');\r\n\r\nconst displayModal = event => {\r\n  event.preventDefault();\r\n  if (!event.target.classList.contains('gallery__image')) {\r\n    return;\r\n  }\r\n  lightboxEl.classList.add('is-open');\r\n  lightboxImgEl.setAttribute('src', event.target.dataset.source);\r\n  lightboxImgEl.setAttribute('alt', event.target.getAttribute('alt'));\r\n  scrollImage;\r\n};\r\n\r\ngalleryEl.addEventListener('click', displayModal);\r\n\r\n// Задача:\r\n// Закрытие модального окна по клику на кнопку button[data-action=\"close-lightbox\"].\r\n// Очистка значения атрибута src элемента img.lightbox__image.\r\n// Это необходимо для того, чтобы при следующем открытии модального окна,\r\n// пока грузится изображение, мы не видели предыдущее.\r\n\r\n// Дополнительное задание: Закрытие модального окна по клику на div.lightbox__overlay.\r\n\r\nconst closeLightbox = event => {\r\n  if (\r\n    !(\r\n      event.target.getAttribute('data-action') === 'close-lightbox' ||\r\n      event.target.classList.contains('lightbox__content')\r\n    )\r\n  ) {\r\n    return;\r\n  }\r\n  lightboxEl.classList.remove('is-open');\r\n  lightboxImgEl.setAttribute('src', '');\r\n};\r\ndocument.body.addEventListener('click', closeLightbox);\r\n\r\n//Дополнительное задание: Закрытие модального окна по нажатию клавиши ESC\r\n\r\nconst closeLightboxByKey = event => {\r\n  if (event.code !== 'Escape') {\r\n    return;\r\n  }\r\n  {\r\n    lightboxEl.classList.remove('is-open');\r\n    lightboxImgEl.setAttribute('src', '');\r\n    lightboxEl.insertAdjacentHTML(\r\n      'beforeend',\r\n      '<i class=\"material-icons\">close</i>',\r\n    );\r\n  }\r\n};\r\n\r\ndocument.body.addEventListener('keydown', closeLightboxByKey);\r\nconsole.log(Hello);\r\n"]}